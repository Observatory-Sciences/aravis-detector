name: 'Build Cpp'

on:
  push: 
    branches: [main, gsc-dev]
  workflow_dispatch:

env:
  INSTALL_PREFIX: ${{ github.workspace }}/prefix

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
            sudo apt -y update
            sudo apt install cmake
            pip3 install meson ninja 
            sudo apt update
            sudo apt install python3 libusb-1.0-0-dev gobject-introspection valgrind libgstreamer-plugins-bad1.0-dev libgtk-3-dev libgirepository1.0-dev python3-gi libunwind-dev gettext
            sudo apt install libboost-program-options-dev libboost-filesystem-dev libboost-date-time-dev libboost-dev  libboost-system-dev libboost-test-dev libboost-thread-dev libboost-regex-dev
            sudo apt install libzmq3-dev libpcap-dev liblog4cxx-dev libblosc-dev libhdf5-dev librdkafka-dev

      - name: Prepare build
        run: mkdir -p ${INSTALL_PREFIX} && echo "INSTALL_PREFIX is ${INSTALL_PREFIX}"

      - name: Build odin-data
        run: |
          git clone https://github.com/odin-detector/odin-data.git && cd odin-data
          mkdir build && cd build
          cmake -DCMAKE_INSTALL_PREFIX=${INSTALL_PREFIX} ../cpp
          make -j8 VERBOSE=1 && make install VERBOSE=1
          ls -la ${INSTALL_PREFIX}
          cd ..
      - name: Build aravis
        run: |
          git clone https://github.com/AravisProject/aravis
          cd aravis
          git checkout 96cea98
          meson --buildtype=plain -Ddocumentation=enabled -Dgst-plugin=enabled -Dintrospection=enabled -Dusb=disabled -Dviewer=enabled . ./build
          ninja -C ./build
          meson configure -Dusb=enabled build
          ninja -C ./build
      - name: Build aravis-detector
        run: |
          mkdir build && cd build
          cmake -DCMAKE_INSTALL_PREFIX=${INSTALL_PREFIX} -DODINDATA_ROOT_DIR=${INSTALL_PREFIX} ../cpp
          make -j8 VERBOSE=1 && make install VERBOSE=1
          ls -la ${INSTALL_PREFIX}